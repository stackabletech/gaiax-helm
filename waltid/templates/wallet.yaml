apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-config
data:
  _features.conf: |
    enabledFeatures = [
    ]
  web.conf: |
    webHost = "0.0.0.0"
    webPort = 4545
  wallet.auth: |
    encryptionKey = "dncygwnvivxzlohc"
    signKey = "jyjeylmidlylokzh"
    tokenKey = "{"p":"8DhAtwXUO8as8-jY_e0OIX2tB8TmoLkLTwJtJXmWrE7pFUVFMviXCHiNd3x_KngJel002xGW3zTHweSqVIkKO_0HqSEed9XKrKQnJTypU5_M-lDHNUtYTp6ATB-rjuGL8F-BxjoMZUTq5arUQ8IxHJda0iQSqwIH-8F-ivHpO2U","kty":"RSA","q":"xoPLLuoXVh9Wk4m8cTXhLf-RA9lapIKhwoPadRJSA8ceA1dqhsH1Vjgk0UVxV1nc-LJUBvpPsWuJDoDc7SUPNZR79Z2UyXZXBBMnXx82UOuK_wJ6yi111rLUDgeHZhh67MAL0TSX6Pje1Xl2s--i7UQuOba6P06SFrl81S--mGM","d":"TSmJ37dU1yZ7NSfL3hm6yfFPCtjww0D4t6uiy8KTpi3Oy7C8_vx1HFZLPr6AlDJkIGfOvHAJ87gVexguJGQgmhu0VJzEsH4IXiVx9L8aNqloc6umhS44dLZU6mwr5EVhx3jz0qI3t6CORzzs6BNnzLtUCIErwpFLDzyI9T0-vxivIBlG4pjmJL0I0zpirMGg-E2oYYIYWgRAc6teibQ5auS3skxIJINBOiAKhvQGU1uOxRnPHiGzEk-sStwrgBbCmlWFy4xXBymkUZTpPwW-dqCpxIUXcfDI-AQ85XmdWoOZRvX5YpX5BDdkeHy1Og3GAsf7w8BCQeROv6fnLEgVPQ","e":"AQAB","kid":"44benLH7kwpQ5uynsoM8JkhftDR6QYpAxVeVm5i-Cqw","qi":"Nw-UbUD9eBIEUJr_y2VkIi1zzrFY19DU3842PRY7sal4pUO1OSO65v5KJwxRsww-k4oD2IrJM1vwCOYXMOkGadldpYDbHZcZAXd4MMfLrrmNKS7eP60m36n5WUookGOowqhLScCYlArYF7JcptN2E77-gRFGf-Yo7KRJA8Q0TYI","dp":"uB31hBJErBhIAZ6rilyCYysHTxgcyH1r7H_oljuOP70vqyzvr_SXFlgH3dgfQ7bDVPVRiML_h07V-IfCAY8TuAzlLT2EM8c6U35xvnmzMrQdkJIPTYrVQVT88tunS5kWAAPD3OIrFAdxntyDWvfhWo-rfbtGT6n74ntY-TgXUn0","dq":"s2Iit6kXH17AKCAdpZuPeLZo_zZovyHANHpbbND6RamniFN00oLwRFIFiwmaStnMYPscDRYh72wB9JYjjTOg08TyYtdbvNTv-qGoQT9-II9IEfnWpV2BD1qXXnoVMv_KDKfZxdklsIM7MWJKDnzsGEU1FDf3gv9n6ZsBn88-Bos","n":"ukctf01ANV4BiJ3eBdoqepmTh1CspUkzKK3zFa2kfUM2O1HMGrNUoJYyUZOFTcrPATOils1I27zGkYeLOYVHQn-QM4kjXDB_OxTpczYOkSu2s50QBk5jTAIb2pLC8ynnDAQWAXFzVOyT_e_PY3crhnosI900tzvyjtAhb8BxIAe7co7OCScagv8A2MOcm-3I9LsM_ecjM5ACfNpOwPzrxPgQzKp3vZapBVLOp1LqiKuyf1_1gTGMmr17MnliPoMo-jiQQaaU-DE-rnuARTabE05b7TqdK2WXFWnXnIRxwoklbZajXJY5EqeMlbt4FNVfmtFC7FXv_3GGUCNoqGvwDw"}"
    audTokenClaim = "http://wallet.{{.Values.domain}}"
    issTokenClaim = "http://wallet.{{.Values.domain}}"
    tokenLifetime = "30"//days
  db.conf: |  
    dataSource {
      jdbcUrl = "jdbc:postgresql://wallet-postgresql:5432/wallet"   
      driverClassName = "org.postgresql.Driver"
      username = "wallet"
      password = ".Values.dbPassword"
      transactionIsolation = "TRANSACTION_SERIALIZABLE"
      maximumPoolSize = 16
      minimumIdle = 4
      maxLifetime = 60000
      dataSource {
          journalMode = "WAL"
          fullColumnNames = false
      }                                                                                                                                                                                                                                                                                                                                  â”‚
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wallet-data-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: wallet-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wallet-api
  template:
    metadata:
      labels:
        app: wallet-api
    spec:
      containers:
        - name: wallet-api
          image: waltid/wallet-api:0.7.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: wallet-config
              mountPath: /waltid-wallet-api/config/web.conf
              readOnly: true
              subPath: web.conf
            - mountPath: /waltid-wallet-api/data/
              name: wallet-data
          ports:
            - containerPort: 4545
              name: http-api
            - containerPort: 5005
              name: debug
      volumes:
        - name: wallet-config
          configMap:
            name: wallet-config
        - name: wallet-data
          persistentVolumeClaim:
            claimName: wallet-data-volume-claim
---
kind: Service
apiVersion: v1
metadata:
  name: wallet-api
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: wallet-api
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: wallet-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wallet-frontend
  template:
    metadata:
      labels:
        app: wallet-frontend
    spec:
      containers:
        - name: wallet-frontend
          #image: waltid/waltid-demo-wallet:0.7.0
          image: docker.stackable.tech/gaia-x/wallet-frontend:0.1.3
          imagePullPolicy: Always
          env:
            - name: NUXT_PUBLIC_ISSUER_CALLBACK_URL
              value: "https://wallet.{{.Values.domain}}"
            - name: NUXT_PUBLIC_DEMO_WALLET_URL
              value: "https://wallet.{{.Values.domain}}"
            - name: NUXT_PUBLIC_CREDENTIALS_REPOSITORY_URL
              value: "https://credentials.{{.Values.domain}}"
          ports:
            - containerPort: 7101
              name: http-api
---
kind: Service
apiVersion: v1
metadata:
  name: wallet-frontend
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: wallet-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wallet
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - wallet.{{.Values.domain}}
      secretName: ingress-wallet
  rules:
    - host: wallet.{{.Values.domain}}
      http:
        paths:
          - path: /wallet-api/
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /swagger
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /api.json
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /livez
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /features/
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /debug/
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wallet-frontend
                port:
                  name: http
